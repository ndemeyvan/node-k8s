
name: Build , test and  push docker image to digial ocean cluster to production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  NAME_SPACE: production
  EXT_PORT: 80
  INT_PORT: 80
  IMAGE_NAME: ndemeyvan/node_k8s
  IMAGE_ARTEFACT_NAME: node_k8s

jobs:

# # # # # # # # # # # # # # Build

  build:
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest]

    steps:
    - name: Checkout to the actual code
      uses: actions/checkout@v3
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build
      uses: docker/build-push-action@v2
      with:
          context: .
          tags: ${{ env.IMAGE_NAME }}:latest
          outputs: type=docker,dest=/tmp/${{env.IMAGE_ARTEFACT_NAME}}.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
          name: ${{env.IMAGE_ARTEFACT_NAME}}
          path: /tmp/${{env.IMAGE_ARTEFACT_NAME}}.tar
  
# # # # # # # # # # # # # # Test

  # test:
  #   needs: build 
  #   runs-on: ${{matrix.os}}

  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #       os: [ubuntu-latest]

  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #          name: ${{env.IMAGE_ARTEFACT_NAME }}
  #          path: /tmp

  #     - name: Load Docker image
  #       run: docker load --input /tmp/${{env.IMAGE_ARTEFACT_NAME}}.tar

  #     - name: Display all docker images
  #       run: docker images

  #     - name: create docker container ${{env.IMAGE_ARTEFACT_NAME }}
  #       run: docker run -d -p ${{env.EXT_PORT}}:${{env.INT_PORT}} --name  ${{ env.IMAGE_ARTEFACT_NAME }}  ${{ env.IMAGE_NAME }}

  #     - name: Wait the container start
  #       run: sleep 5

  #     - name: Curl the localhost address
  #       run: curl localhost:${{env.EXT_PORT}} | grep "Hello"

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #           username: ${{ secrets.DOCKER_USERNAME }}
  #           password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: The test is correct , push image to dockerHub
  #       run: docker push ${{env.IMAGE_NAME}}

# # # # # # # # # # # # # # Deployment

  # deploy: 
  #   needs: test 
  #   runs-on: ${{matrix.os}}

  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #       os: [ubuntu-latest]

  #   steps:
  #   - name: Set up kubectl
  #     uses: matootie/dokube@v1.4.0
  #     with:
  #       personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
  #       clusterName: ${{ secrets.CLUSTER_NAME }}

  #   - name: Checkout to the actual code
  #     uses: actions/checkout@v3

  #   - name: Create namespace
  #     run: kubectl create namespace ${{ env.NAME_SPACE }} | echo "Name space already exist"
  #   - name: restart deployment
  #     run: kubectl -n ${{ env.NAME_SPACE }} rollout restart deploy | echo "Empty deployment or pod"
  #   - name: Apply all k8s object
  #     run: kubectl -n ${{ env.NAME_SPACE }} apply -f k8s/

